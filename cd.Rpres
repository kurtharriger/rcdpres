Continous Delivery for R Users
========================================================
author:  Kurt Harriger
date:    2015/04/03


About your presenter
========================================================

Kurt Harriger is a data engineer with Rally using big data technologies to gather and summarize system, performance, and usage metrics from our hosted agile lifecycle management product suite.  This provides leadership, sales, and product teams the data they need to make informed decisions and prioritize resources more effectively.  

Kurt has been a systems and software engineer for more than 15 years and brings process insights from the engineering organization.  

Rally is the leader in agile transformations -- providing the training and tools to transform your organization into one that innovates, leads, adapts, and delivers.

What is Continous Delivery
========================================================

Continous Delivery is the automation of all the steps necessary to build and release final artifacts as the source code is changed.

Release artifacts come in many forms:

- Websites
- Documentation
- Developer libraries and packages
- Platform specific packages 
- Docker containers

R speific artifacts
=======================================================

- Shiny applications
  - Shinyapps.io
  - Self Hosted
  
  
R speific artifacts
=======================================================
- Packages
  - CRAN
  - Custom repo
  - Github
  
- Documentation
  - RPubs
  - Github
  - Amazon Web Services

Advantages of Continous Delivery 
========================================================

- Accellerated Time to Market
- Building the Right Product
- Improved Productivity and Efficiency
- Reliable Releases
- Improved Product Quality

Continous Integration/Delivery Tools
========================================================

- Travis-ci
- Jenkins
- Drone.io
- Docker.io

Travis-CI - travis-ci.org - travis-ci.com
========================================================

<center>
![travisci](travisci.png)
</center>

* Easiest to use
* R support
* Open source but not easy to host your own

Jenkins-CI - jenkins-ci.org 
========================================================

<center>
![jenkinsci](jenkins.png)
</center>

* Self-Hosted CI soltuion
* Also supports scheduled jobs

Docker.io - docker.io 
========================================================

<center>
![dockerio](dockerio.png)
</center>

- Build your own docker images 
  - AWS
  - Digital Ocean
  

Travis-CI - travis.yml
========================================================

http://docs.travis-ci.com/user/languages/r/

- Build and test r packages

   `.travis.yml` 

```
language: r
sudo: required
```

Travis-CI - Deploy shinyapps.io
========================================================


   `build.R` 

```
#! /usr/bin/env Rscript 

shinyapps::setAccountInfo(name='kurtharriger',
                          token='DE3CF8C226BDB4F14DBC429AFB12403B',
                          secret=Sys.getenv("SHINYAPPS_SECRET"))
shinyapps::deployApp('shiny')

```


Travis-CI - Deploy shinyapps.io
========================================================

   `.travis.yml` 

```
language: r
sudo: required
script: ./build.R
env:
  global:
    secure: YCYysD...l8xvfXeW91/V6c=
```

```
gem install travis

travis encrypt SHINYAPPS_SECRET=<your secret key> --add
```


Travis-CI - Deploy markdown
========================================================

   `build.R` 


```
#! /usr/bin/env Rscript 
require(rmarkdown)
rmarkdown::render('document.Rmd', output_dir="target")
```

```
travis deploy s3
```

Travis-CI - Deploy markdown
========================================================

   `.travis.yml` 

```
language: r
script: "./build.R"
sudo: required
deploy:
  skip_cleanup: true
  provider: s3
  access_key_id: AKIAJCGFQEZ3CD243KHA
  secret_access_key:
    secure: JbE864...JcQTv7X1EgXfnfOs5Q=
  bucket: kurtharriger-rmeetup
  local-dir: target
  upload-dir: rcdpres
  acl: public_read
  on:
    repo: kurtharriger/rcdpres
````


Travis-CI - More examples
========================================================

devtools 
  - Uses the travis r plugin
  - https://github.com/hadley/devtools/blob/master/.travis.yml

ggplot2
  - Pre-travis r plugin
  - Publishes updated documentation on updates
  - https://github.com/hadley/ggplot2/blob/master/.travis.yml


Travis-CI - More examples
========================================================

dplyr 
  - Uses travis provided postgres in unit tests
  - https://github.com/hadley/dplyr/blob/master/.travis.yml

Adv-R 
  - Source code for the Advanced R Programming book
  - https://github.com/hadley/adv-r/blob/master/.travis.yml
